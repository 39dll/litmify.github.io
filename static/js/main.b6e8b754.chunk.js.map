{"version":3,"sources":["serviceWorker.js","Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Home","className","href","style","marginLeft","role","aria-label","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,UCqJSC,MApKf,WACE,OACE,oCACE,6BAASC,UAAU,sBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,YAAd,eACA,2BACE,mCACA,6BACA,uBAAGC,KAAK,8BAAR,sBAEF,6BACA,2BACE,qCACA,6BACA,uBAAGA,KAAK,8BAAR,cAGJ,yBAAKD,UAAU,UACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,cAAd,aACA,2BACE,2BACE,uBAAGC,KAAK,wBAAR,UAEF,6BAJF,2CASF,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,cAAd,YACA,6BACE,6BACE,2BACE,uBAAGC,KAAK,sBAAR,WAEF,uBACEC,MAAO,CAAEC,WAAY,QACrBF,KAAK,qCAFP,UAMA,6BAVF,0CAYE,8BAGF,6BAEA,6BACE,2BACE,uBAAGA,KAAK,iCAAR,aAEF,uBACEC,MAAO,CAAEC,WAAY,QACrBF,KAAK,uCAFP,UAMA,0BACEC,MAAO,CAAEC,WAAY,QACrBC,KAAK,MACLC,aAAW,UAHb,gBAOA,6BACA,yCACa,0CAEb,6BArBF,uCAuBE,8BAGF,6BAEA,6BACE,2CACA,uBACEH,MAAO,CAAEC,WAAY,QACrBF,KAAK,0CAFP,UAMA,6BARF,oBASmB,uBAAGA,KAAK,sBAAR,UATnB,IAUE,gCAKN,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,cAAd,eACA,4BACE,4BACE,2BACE,uBAAGC,KAAK,sBAAR,UADF,YAGA,6BACA,4BACE,4BACE,wCADF,WAGA,wCACY,IACV,uBAAGA,KAAK,6BAAR,UAFF,oCAKA,6CACiB,IACf,uBAAGA,KAAK,2BAAR,QAFF,WAIA,0DAKN,6BAEA,6BACE,uCADF,UAEE,6BAFF,yCAIE,8BAGF,6BAEA,6BACE,mCADF,UAEE,6BAFF,uDAIE,+BAIJ,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,cAAd,sCAGA,4BACE,4BACE,kEACA,6BAFF,cAGa,0CAEb,sCCpJpBM,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,SF4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b6e8b754.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <section className=\"hero is-fullheight\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-half\">\r\n                <h1 className=\"title\">litmify</h1>\r\n                <h2 className=\"subtitle\">Fi @ SPARCS</h2>\r\n                <p>\r\n                  <b>Mail</b>\r\n                  <br />\r\n                  <a href=\"mailto://litmify@gmail.com\">litmify@gmail.com</a>\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <b>Github</b>\r\n                  <br />\r\n                  <a href=\"https://github.com/litmify\">@litmify</a>\r\n                </p>\r\n              </div>\r\n              <div className=\"column\">\r\n                <div className=\"container right-desc\">\r\n                  <h2 className=\"title is-4\">Education</h2>\r\n                  <p>\r\n                    <b>\r\n                      <a href=\"https://kaist.ac.kr/\">KAIST</a>\r\n                    </b>\r\n                    <br />\r\n                    Majoring Computer Science (Mar 2019 ~)\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"container right-desc\">\r\n                  <h2 className=\"title is-4\">Projects</h2>\r\n                  <div>\r\n                    <div>\r\n                      <b>\r\n                        <a href=\"https://sappir.io/\">Sappir</a>\r\n                      </b>\r\n                      <a\r\n                        style={{ marginLeft: \"1rem\" }}\r\n                        href=\"https://github.com/litmify/Sappir\"\r\n                      >\r\n                        Github\r\n                      </a>\r\n                      <br />\r\n                      Timeline-based scenario & novel writer.\r\n                      <br />\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div>\r\n                      <b>\r\n                        <a href=\"https://overseer.litmify.com/\">Overseer</a>\r\n                      </b>\r\n                      <a\r\n                        style={{ marginLeft: \"1rem\" }}\r\n                        href=\"https://github.com/litmify/Overseer\"\r\n                      >\r\n                        Github\r\n                      </a>\r\n                      <span\r\n                        style={{ marginLeft: \"1rem\" }}\r\n                        role=\"img\"\r\n                        aria-label=\"winner\"\r\n                      >\r\n                        🏆\r\n                      </span>\r\n                      <br />\r\n                      <b>\r\n                        KOI 2018 - <i>Grand Prix</i>\r\n                      </b>\r\n                      <br />\r\n                      Lightweight version of Overseer-KOI.\r\n                      <br />\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div>\r\n                      <b>apply.SPARCS</b>\r\n                      <a\r\n                        style={{ marginLeft: \"1rem\" }}\r\n                        href=\"https://github.com/litmify/SPARCSApply\"\r\n                      >\r\n                        Github\r\n                      </a>\r\n                      <br />\r\n                      Apply system for <a href=\"https://sparcs.org\">SPARCS</a>.\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"container right-desc\">\r\n                  <h2 className=\"title is-4\">Experiences</h2>\r\n                  <ul>\r\n                    <li>\r\n                      <b>\r\n                        <a href=\"https://sparcs.org\">SPARCS</a> @ KAIST\r\n                      </b>\r\n                      <br />\r\n                      <ul>\r\n                        <li>\r\n                          <b>President</b> - 2020\r\n                        </li>\r\n                        <li>\r\n                          Member of{\" \"}\r\n                          <a href=\"https://newara.sparcs.org\">NewARA</a> team -\r\n                          2020: Frontend Developer\r\n                        </li>\r\n                        <li>\r\n                          Contributed to{\" \"}\r\n                          <a href=\"https://zabo.sparcs.org\">Zabo</a> - 2020\r\n                        </li>\r\n                        <li>Regular Member - 2019 ~</li>\r\n                      </ul>\r\n                    </li>\r\n                  </ul>\r\n\r\n                  <br />\r\n\r\n                  <div>\r\n                    <b>ScoreBon</b> - 2020\r\n                    <br />\r\n                    React-native based hybrid application.\r\n                    <br />\r\n                  </div>\r\n\r\n                  <br />\r\n\r\n                  <div>\r\n                    <b>Apic</b> - 2020\r\n                    <br />\r\n                    React-native based live camera / filter application.\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"container right-desc\">\r\n                  <h2 className=\"title is-4\">\r\n                    Honors, Awards and Accomplishments\r\n                  </h2>\r\n                  <ul>\r\n                    <li>\r\n                      <b>Korea Olympiad in Informatics, 2018</b>\r\n                      <br />\r\n                      Overseer - <i>Grand Prix</i>\r\n                    </li>\r\n                    <br />\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.scss';\r\nimport Home from './Home';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}