{"version":3,"sources":["serviceWorker.js","Home.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Home","className","href","style","marginLeft","role","aria-label","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,UCwHSC,MAvIf,WACE,OACE,oCACE,6BAASC,UAAU,sBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,YAAd,eACA,2BACE,mCACA,6BACA,uBAAGC,KAAK,8BAAR,sBAEF,6BACA,2BACE,qCACA,6BACA,uBAAGA,KAAK,8BAAR,cAGJ,yBAAKD,UAAU,UACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,cAAd,aACA,2BACE,2BACE,uBAAGC,KAAK,6BAAR,UAEF,6BAJF,2CASF,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,cAAd,YACA,6BACE,6BACE,2BACE,uBAAGC,KAAK,sBAAR,WAEF,uBACEC,MAAO,CAAEC,WAAY,QACrBF,KAAK,qCAFP,UAMA,6BAVF,+BAYE,8BAGF,6BAEA,6BACE,2BACE,uBAAGA,KAAK,iCAAR,aAEF,uBACEC,MAAO,CAAEC,WAAY,QACrBF,KAAK,uCAFP,UAMA,0BACEC,MAAO,CAAEC,WAAY,QACrBC,KAAK,MACLC,aAAW,UAHb,gBAOA,6BACA,oEACwC,0CAExC,6BArBF,uCAuBE,8BAGF,6BAEA,6BACE,2BACE,uBAAGJ,KAAK,6BAAR,iBAEF,uBACEC,MAAO,CAAEC,WAAY,QACrBF,KAAK,2CAFP,UAMA,6BAVF,oBAWmB,uBAAGA,KAAK,sBAAR,UAXnB,IAYE,gCAKN,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,cAAd,sCAGA,4BACE,4BACE,kEACA,6BAFF,cAGa,0CAEb,6BACA,4BACE,2BAAG,uBAAGC,KAAK,sBAAR,UAAH,WACA,6BACA,4BACE,4BACE,wCADF,WAGA,yCACY,uBAAGA,KAAK,2BAAR,QAA2C,IADvD,eAIA,0ECrHxBK,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,SF4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.47555947.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./Home.scss\";\n\nfunction Home() {\n  return (\n    <>\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-half\">\n                <h1 className=\"title\">litmify</h1>\n                <h2 className=\"subtitle\">Fi @ SPARCS</h2>\n                <p>\n                  <b>Mail</b>\n                  <br />\n                  <a href=\"mailto://litmify@gmail.com\">litmify@gmail.com</a>\n                </p>\n                <br />\n                <p>\n                  <b>Github</b>\n                  <br />\n                  <a href=\"https://github.com/litmify\">@litmify</a>\n                </p>\n              </div>\n              <div className=\"column\">\n                <div className=\"container right-desc\">\n                  <h2 className=\"title is-4\">Education</h2>\n                  <p>\n                    <b>\n                      <a href=\"https://www.kaist.edu/en/\">KAIST</a>\n                    </b>\n                    <br />\n                    Majoring Computer Science (Mar 2019 ~)\n                  </p>\n                </div>\n\n                <div className=\"container right-desc\">\n                  <h2 className=\"title is-4\">Projects</h2>\n                  <div>\n                    <div>\n                      <b>\n                        <a href=\"https://sappir.io/\">Sappir</a>\n                      </b>\n                      <a\n                        style={{ marginLeft: \"1rem\" }}\n                        href=\"https://github.com/litmify/Sappir\"\n                      >\n                        Github\n                      </a>\n                      <br />\n                      Currently under development.\n                      <br />\n                    </div>\n\n                    <br />\n\n                    <div>\n                      <b>\n                        <a href=\"https://overseer.litmify.com/\">Overseer</a>\n                      </b>\n                      <a\n                        style={{ marginLeft: \"1rem\" }}\n                        href=\"https://github.com/litmify/Overseer\"\n                      >\n                        Github\n                      </a>\n                      <span\n                        style={{ marginLeft: \"1rem\" }}\n                        role=\"img\"\n                        aria-label=\"winner\"\n                      >\n                        üèÜ\n                      </span>\n                      <br />\n                      <b>\n                        Korea Olympiad in Informatics, 2018 - <i>Grand Prix</i>\n                      </b>\n                      <br />\n                      Lightweight version of Overseer-KOI.\n                      <br />\n                    </div>\n\n                    <br />\n\n                    <div>\n                      <b>\n                        <a href=\"https://apply.sparcs.org/\">apply.SPARCS</a>\n                      </b>\n                      <a\n                        style={{ marginLeft: \"1rem\" }}\n                        href=\"https://github.com/litmify/apply-sparcs\"\n                      >\n                        Github\n                      </a>\n                      <br />\n                      Apply system for <a href=\"https://sparcs.org\">SPARCS</a>.\n                      <br />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"container right-desc\">\n                  <h2 className=\"title is-4\">\n                    Honors, Awards and Accomplishments\n                  </h2>\n                  <ul>\n                    <li>\n                      <b>Korea Olympiad in Informatics, 2018</b>\n                      <br />\n                      Overseer - <i>Grand Prix</i>\n                    </li>\n                    <br />\n                    <li>\n                      <b><a href=\"https://sparcs.org\">SPARCS</a> @KAIST</b>\n                      <br />\n                      <ul>\n                        <li>\n                          <b>President</b> - 2020\n                        </li>\n                        <li>\n                          Member of <a href=\"https://zabo.sparcs.org\">Zabo</a>{\" \"}\n                          team - 2020\n                        </li>\n                        <li>Regular Member - 2019 ~ Present</li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\nimport Home from './Home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}